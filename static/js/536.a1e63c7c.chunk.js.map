{"version":3,"file":"static/js/536.a1e63c7c.chunk.js","mappings":"8MAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE,G,0FI2C9F,EA5Cc,WACZ,OAA0BC,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,MAMAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBF,GAAS,SAAAG,GAAS,yBACbA,GADa,IAEhBN,SAAS,OAHM,mBAOIO,EAAAA,EAAAA,MAPJ,OAOTC,EAPS,OAQfL,GAAS,SAAAG,GAAS,yBACbA,GADa,IAEhBP,MAAM,EAAKS,EAAKC,SAChBT,SAAS,OAXI,gDAcfG,GAAS,SAAAG,GAAS,yBACbA,GADa,IAEhBN,SAAS,EACTC,MAAK,UAjBQ,yDAAH,qDAsBhBI,MACC,IAEH,IAAQN,EAA0BG,EAA1BH,MAAOC,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAExB,OACE,gCACGD,IAAW,sCACXC,IAAS,4CACV,SAAC,IAAD,CAAUF,MAAOA,QCjCvB,EARiB,WACf,OAAO,2BACP,iBAAKW,UAAU,YAAf,WACA,4CACA,SAAC,EAAD,W,gMCJIC,EAAS,mCAETC,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,kCAGEP,EAAQ,mCAAG,sGACCK,EAASG,IAAT,mCAAyCJ,IAD1C,uBACdH,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,qDAKRQ,EAAgB,mCAAG,WAAMC,GAAN,uFACPL,EAASG,IAAT,iBAAuBE,EAAvB,oBAAqCN,EAArC,oBADO,cACxBO,EADwB,yBAEvBA,GAFuB,2CAAH,sDAKhBC,EAAmB,mCAAG,WAAMC,GAAN,uFACVR,EAASG,IAAT,gCAAsCJ,EAAtC,4DAAgGS,IADtF,cAC3BF,EAD2B,yBAE1BA,GAF0B,2CAAH,sDAKnBG,EAAe,mCAAG,WAAMJ,GAAN,uFACNL,EAASG,IAAT,iBAAuBE,EAAvB,4BAA6CN,EAA7C,oBADM,cACvBO,EADuB,yBAEtBA,GAFsB,2CAAH,sDAKfI,EAAkB,mCAAG,WAAML,GAAN,uFACTL,EAASG,IAAT,iBAAuBE,EAAvB,4BAA6CN,EAA7C,oBADS,cAC1BO,EAD0B,yBAEzBA,GAFyB,2CAAH,uD,qFCzBzBK,EAAW,SAAC,GAAa,IAAZxB,EAAW,EAAXA,MACXyB,GAAWC,EAAAA,EAAAA,MAEXC,EAAW3B,EAAM4B,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,MAAP,OACzB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaZ,GAAMf,MAAO,CAACP,KAAM6B,GAAzC,SAAqDI,KAD9CX,MAKX,OAAO,wBAAKS,KAGdH,EAASO,aAAe,CACtB/B,MAAO,IAOT","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","modules/Posts/Posts.jsx","pages/HomePage/HomePage.jsx","shared/api/films.js","shared/components/FilmList/FilmList.jsx"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect } from 'react';\nimport { getFilms } from 'shared/api/films';\nimport PostList from 'shared/components/FilmList';\n\nconst Posts = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      setState(prevState => ({\n        ...prevState,\n        loading: true,\n      }))\n\n      try {\n        const data = await getFilms();\n        setState(prevState => ({\n          ...prevState,\n          items: [...data.results],\n          loading: false\n        }))\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n          error,\n        }))\n      }\n    }\n\n    fetchFilms();\n  }, []);\n\n  const { items, loading, error } = state;\n\n  return (\n    <>\n      {loading && <p>...Loading</p>}\n      {error && <p>Films not found</p>}\n      <PostList items={items}/>\n    </>\n  );\n};\n\nexport default Posts;\n","import PostsList from \"modules/Posts\";\n\nconst HomePage = () => {\n  return <main>\n  <div className=\"container\">\n  <h2>Trending today</h2>\n  <PostsList/>\n  </div></main>\n}\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst apiKEY = '196da2d2dd4f95fd9bfe0927ab5d4d33';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const getFilms = async () => {\n  const { data } = await instance.get(`trending/all/day?api_key=${apiKEY}`);\n  return data;\n};\n\nexport const fetchFilmsWithId = async id => {\n  const response = await instance.get(`/movie/${id}?api_key=${apiKEY}&language=en-US`);\n  return response;\n};\n\nexport const fetchFilmsWithQuery = async searchQuery => {\n  const response = await instance.get(`/search/movie?api_key=${apiKEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`)\n  return response;\n}\n\nexport const fetchCastWithId = async id => {\n  const response = await instance.get(`/movie/${id}/credits?api_key=${apiKEY}&language=en-US`);\n  return response;\n}\n\nexport const fetchReviewsWithId = async id => {\n  const response = await instance.get(`/movie/${id}/reviews?api_key=${apiKEY}&language=en-US`);\n  return response;\n}\n","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst PostList = ({items}) => {\n  const location = useLocation();\n\n  const elements = items.map(({ id, title }) => (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{from: location}}>{title}</Link>\n    </li>\n  ));\n\n  return <ul>{elements}</ul>\n}\n\nPostList.defaultProps = {\n  items: [],\n}\n\nPostList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({id: PropTypes.number.isRequired, title: PropTypes.string}))\n}\n\nexport default PostList;\n"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","useState","items","loading","error","state","setState","useEffect","fetchFilms","prevState","getFilms","data","results","className","apiKEY","instance","axios","baseURL","get","fetchFilmsWithId","id","response","fetchFilmsWithQuery","searchQuery","fetchCastWithId","fetchReviewsWithId","PostList","location","useLocation","elements","map","title","to","defaultProps"],"sourceRoot":""}